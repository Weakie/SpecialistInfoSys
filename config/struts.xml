<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
    "http://struts.apache.org/dtds/struts-2.0.dtd">

<struts>
	<!-- 开发模式下使用,这样可以打印出更详细的错误信息 -->
	<constant name="struts.devMode" value="true" />
	<!-- 表示struts的action是由spring来生成的 -->
	<constant name="struts.objectFactory" value="org.apache.struts2.spring.StrutsSpringObjectFactory" />
	
	<!-- 该属性指定需要Struts2处理的请求后缀，该属性的默认值是action，即所有匹配*.action的请求都由Struts2处理。 如果用户需要指定多个请求后缀，则多个后缀之间以英文逗号（,）隔开。 -->
	<constant name="struts.action.extension" value="action" />
	<!-- 设置浏览器是否缓存静态内容,默认值为true(生产环境下使用),开发阶段最好关闭 -->
	<constant name="struts.serve.static.browserCache" value="false" />
	<!-- 当struts的配置文件修改后,系统是否自动重新加载该文件,默认值为false(生产环境下使用),开发阶段最好打开 -->
	<constant name="struts.configuration.xml.reload" value="true" />
	<!-- 默认的视图主题 -->
	<constant name="struts.ui.theme" value="simple" />
	<!-- 解决乱码 -->
	<constant name="struts.i18n.encoding" value="UTF-8" />
	<!-- 指定允许上传的文件最大字节数。默认值是2097152(2M) -->
	<constant name="struts.multipart.maxSize" value="10701096" />
	<!-- 设置上传文件的临时文件夹,默认使用javax.servlet.context.tempdir -->
	<!-- <constant name="struts.multipart.saveDir" value="d:/tmp" /> -->
	<!-- 设置文件上传出错的时候显示信息 -->
	<constant name="struts.custom.i18n.resources" value="com.weakie.action.fileuploadmessage"></constant>
	<package name="basicstruts2" extends="struts-default" namespace="/">
		
		<!-- 定义一个拦截器 -->  
        <interceptors>  
            <interceptor name="login" class="com.weakie.action.interceptor.LoginInterceptor"/>
            <interceptor name="staffAuthority" class="com.weakie.action.interceptor.StaffAuthorityCheckInterceptor"/>
            <interceptor name="specAuthority" class="com.weakie.action.interceptor.SpecAuthorityCheckInterceptor"/>
            <interceptor name="sraffDisposeAuthority" class="com.weakie.action.interceptor.StaffDisposeCheckInterceptor"/>
            <interceptor name="sraffCheckAuthority" class="com.weakie.action.interceptor.StaffCheckInterceptor"/>
            <!-- 拦截器栈 -->  
            <interceptor-stack name="checklogin">  
                <interceptor-ref name="defaultStack" />  
                <interceptor-ref name="login" />  
            </interceptor-stack>
            <interceptor-stack name="staffAuthorityForSpecInfo">  
                <interceptor-ref name="defaultStack" />  
                <interceptor-ref name="staffAuthority" />  
            </interceptor-stack> 
            <interceptor-stack name="specAuthorityForSpecInfo">  
                <interceptor-ref name="defaultStack" />  
                <interceptor-ref name="specAuthority" />  
            </interceptor-stack>  
            <interceptor-stack name="staffAuthorityForDispose">  
                <interceptor-ref name="defaultStack" />  
                <interceptor-ref name="sraffDisposeAuthority" />  
            </interceptor-stack>  
            <interceptor-stack name="staffAuthorityCheck">  
                <interceptor-ref name="defaultStack" />  
                <interceptor-ref name="sraffCheckAuthority" />  
            </interceptor-stack>  
        </interceptors>  
  
        <!-- 定义全局Result -->  
        <global-results>  
            <!-- 当返回login视图名时，转入/jsp/login.jsp页面 -->  
            <result name="login">/jsp/login.jsp</result> 
            <result name="RESULT_FAIL">/jsp/result_fail.jsp</result>  
        </global-results>
        
        <!-- 登录 -->
		<action name="loginForm">
			<result>/jsp/login.jsp</result>
		</action>
		<action name="login" class="userLoginRegisterAction" method="executeLogin">
			<result name="success">/jsp/login_redirect.jsp</result>
			<result name="input">/jsp/login.jsp</result>
		</action>
		<!-- 注册 -->
		<action name="registerForm">
			<result>/jsp/register.jsp</result>
		</action>
		<action name="usernameConfirm" class="userLoginRegisterAction" method="executeUserNameExists">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		<action name="register" class="userLoginRegisterAction" method="executeRegister">
			<result name="success">/jsp/login.jsp</result>
			<result name="input">/jsp/register.jsp</result>
		</action>
		<!-- 重置密码 -->
		<action name="resetPasswordForm">
			<result>/jsp/spec/reset_password.jsp</result>
		</action>
		<action name="resetPassword" class="userLoginRegisterAction" method="executeResetPassword">
			<result name="success">/jsp/spec/reset_password.jsp</result>
			<result name="input">/jsp/spec/reset_password.jsp</result>
			<interceptor-ref name="checklogin" />
		</action>
		<action name="resetPasswordFormForStaff">
			<result>/jsp/staff/reset_password.jsp</result>
		</action>
		<action name="resetPasswordForStaff" class="userLoginRegisterAction" method="executeResetPassword">
			<result name="success">/jsp/staff/reset_password.jsp</result>
			<result name="input">/jsp/staff/reset_password.jsp</result>
			<interceptor-ref name="checklogin" />
		</action>
		<!-- 账户信息 -->
		<action name="accountInfoDisplayForm">
			<result>/jsp/spec/account_info_display.jsp</result>
			<interceptor-ref name="checklogin" />
		</action>
		<action name="accountInfoDisplayFormForStaff">
			<result>/jsp/staff/account_info_display.jsp</result>
		</action>
		<!-- 重置昵称 -->
		<action name="updateNickName" class="userLoginRegisterAction" method="updateNickName">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
			<interceptor-ref name="specAuthorityForSpecInfo" />
		</action>
		<!-- 注销 -->
		<action name="logout" class="userLoginRegisterAction" method="executeLogout">
			<result name="success">/jsp/login.jsp</result>
		</action>
		<!-- 用户上传自己的图片 -->
		<action name="uploadImage" class="specialistInfoImageAction" method="executeUpload">
			<!-- 定义文件上传拦截器 -->
			<interceptor-ref name="fileUpload">
				<!-- 设置文件上传大小 -->
				<param name="maximumSize">4096000</param>
				<!--设置文件上传类型  -->
				<param name="allowedTypes">image/jpeg</param>
			</interceptor-ref>
			<!-- 自定义了拦截器后必手动设置默认的拦截器，否则默认的拦截器不会被执行 -->
			<interceptor-ref name="defaultStack"></interceptor-ref>
			<!-- 用户图片采用ajax的形式上传 -->
			<result name="input">/errortext.jsp</result>
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
			<interceptor-ref name="specAuthorityForSpecInfo" />
		</action>
		
		<!-- 用户下载自己的图片 -->
		<action name="downloadImage" class="specialistInfoImageAction" method="executeDownload">
			<result name="success" type="stream">
			　　<param name="contentType">image/jpeg</param>
			　　<param name="inputName">inputStream</param>
			　　<param name="bufferSize">1024</param>
			</result>
			<interceptor-ref name="specAuthorityForSpecInfo" />
		</action>
		
		<!-- 专家更新信息页面选项的动态更新 -->
		<action name="specInfoAddUpdate" class="specialistInfoAddUpdateAction" method="executeUpdate">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		
		<!-- 专家 -->
		<action name="specInfoAddPrepare" class="specialistInfoAddPrepareAction" method="executePrepare">
			<result name="success">/jsp/spec/specialist_info_update.jsp</result>
			<interceptor-ref name="specAuthorityForSpecInfo" />
		</action>
		<action name="specInfoAdd" class="specialistInfoAddAction" method="executeAddInfo">
			<result name="success" type="redirectAction">
				<param name="actionName">specInfoDisplay</param>
				<param name="userName">${specInfoBean.userName}</param>
			</result>
			<interceptor-ref name="specAuthorityForSpecInfo" />
		</action>
		<action name="specInfoDisplay" class="specialistInfoDisplayAction" method="execute">
			<result name="success">/jsp/spec/specialist_info_display.jsp</result>
			<interceptor-ref name="specAuthorityForSpecInfo" />
		</action>
		
		<!-- 专家提交申请 -->
		<action name="specAddNewApplyPrepare" class="specAddNewApplyAction" method="executePrepare">
			<result name="success">/jsp/spec/specialist_info_add_apply.jsp</result>
			<interceptor-ref name="specAuthorityForSpecInfo" />
		</action>
		<action name="specAddNewApply" class="specAddNewApplyAction" method="execute">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
			<interceptor-ref name="specAuthorityForSpecInfo" />
		</action>
		
		<!-- 工作人员 -->
		<action name="specInfoAddPrepareForStaff" class="specialistInfoAddPrepareAction" method="executePrepare">
			<result name="success">/jsp/staff/specialist_info_update.jsp</result>
			<interceptor-ref name="staffAuthorityForSpecInfo" />
		</action>
		<action name="specInfoAddForStaff" class="specialistInfoAddAction" method="executeAddInfo">
			<result name="success" type="redirectAction">
				<param name="actionName">specInfoDisplayForStaff</param>
				<param name="userName">${userName}</param>
				<param name="applyInfoId">${applyInfoId}</param>
				<param name="staffId">${staffId}</param>
			</result>
			<interceptor-ref name="staffAuthorityForSpecInfo" />
		</action>
		<action name="specInfoDisplayForStaff" class="specialistInfoDisplayAction" method="execute">
			<result name="success">/jsp/staff/specialist_info_display.jsp</result>
			<interceptor-ref name="staffAuthorityForSpecInfo" />
		</action>
		
		<!-- 处理申请 -->
		<action name="staffDisposeApplyShowAll" class="staffDisposeApplyShowAllAction" method="execute">
			<result name="success">/jsp/staff/staff_dispose_apply.jsp</result>
			<interceptor-ref name="staffAuthorityForDispose" />
		</action>
		<action name="staffDisposeApplyAccept" class="staffDisposeApplyAcceptAction" method="execute">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
			<interceptor-ref name="staffAuthorityForDispose" />
		</action>
		<action name="staffDisposeApplyConfirm" class="staffDisposeApplyAction" method="executeConfirm">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
			<interceptor-ref name="staffAuthorityForDispose" />
		</action>
		
		<!-- 关键字维护 -->
		<action name="selectionInfoAddPrepare" class="selectionInfoAddUpdateAction" method="executePrepare">
			<result name="success">/jsp/staff/staff_dispose_selection.jsp</result>
			<interceptor-ref name="staffAuthorityCheck" />
		</action>
		<action name="selectionInfoAddUpdate" class="selectionInfoAddUpdateAction" method="executeUpdate">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
			<interceptor-ref name="staffAuthorityCheck" />
		</action>
	</package>
</struts>